name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: Pipeline

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x' # SDK Version to use; x will use the latest version of the 3.1 channel

      - run: dotnet build Cleipnir.ResilientFunctions.sln

      - name: Start containers
        run: docker-compose -f "docker-compose.yml" up -d --build

      - run: dotnet run --project ./Stores/EnsureDatabaseConnections/EnsureDatabaseConnections.csproj

      - run: dotnet test ./Stores/MySQL/Cleipnir.ResilientFunctions.MySQL.Tests --logger "console;verbosity=detailed"
      
      - run: dotnet test ./Stores/PostgreSQL/Cleipnir.ResilientFunctions.PostgreSQL.Tests --logger "console;verbosity=detailed"
      
      - run: dotnet test ./Stores/SqlServer/Cleipnir.ResilientFunctions.SqlServer.Tests --logger "console;verbosity=detailed"

      - name: Stop containers
        run: docker-compose -f "docker-compose.yml" down
